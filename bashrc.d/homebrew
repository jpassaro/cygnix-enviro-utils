#!/usr/bin/env bash

if check-for-package --optional brew ; then
  JP_DOTFILES_BASHRC_BREWFILE="$(cd -P "$JP_DOTFILES_BASHRC_D" && cd .. && pwd)/brewfile"

  function br-i() {
    local upgrade no_upgrade verbose
    while [[ "$#" -gt 0 ]] ; do
      case "$1" in
        --upgrade) upgrade=yes ;;
        --verbose) verbose=yes ;;
        *) echo >&2 'usage: br-i [--verbose] [--upgrade]' ; return 1 ;;
      esac
      shift
    done
    [[ -n "$upgrade" ]] || no_upgrade=yes
    brew bundle install ${no_upgrade:+--no-upgrade} ${verbose:+--verbose} --file="$JP_DOTFILES_BASHRC_BREWFILE"
    [[ -n "$upgrade" ]] || echo "Run with --upgrade to do upgrades, or brew-check-full to see upgradeable formulae"
  }

  function brew-check() {
    if command -v check-brew.sh >/dev/null ; then
      check-brew.sh -f "$JP_DOTFILES_BASHRC_BREWFILE" "$@"
    else
      # shellcheck disable=2016
      echo >&2 '**Please install check-brew.sh using `check-installables`.**'
      return 100
    fi
  }

  function brew-check-full() {
    brew bundle check --file="$JP_DOTFILES_BASHRC_BREWFILE" "$@"
  }

  function _brew-check-at-startup() {
    # mostly here for the local variable
    local retval
    source_pragma_once "$JP_DOTFILES_BASHRC_D"/installables
    brew-check --quiet
    retval=$?
    if [[ $retval == 1 ]] ; then
      echo
      echo '** You are missing brew dependencies. Use br-i to install them. **'
      echo
    fi
  }

  _brew-check-at-startup
  unset -f _brew-check-at-startup
fi
